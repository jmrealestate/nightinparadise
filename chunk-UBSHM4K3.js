import{a as $,b as V}from"./chunk-JY6YCKHJ.js";import{a as I,b as z}from"./chunk-TGXXUL5Z.js";import{a as B,b as j}from"./chunk-H62IVGHA.js";import"./chunk-QHM7Z56U.js";import{a,b as K}from"./chunk-DQYI455W.js";import{c as N,d as q}from"./chunk-GRXY2UCV.js";import"./chunk-UOQFKZ5Q.js";import{a as F,b as X}from"./chunk-AOMHIDTB.js";import{a as T,b as G}from"./chunk-DKBVEZ2J.js";import{Ca as k,Ua as M,Va as P,Wa as O,ma as A,oa as H}from"./chunk-OZNJVQIE.js";import{$b as b,Ab as u,Fb as p,Ga as x,Lb as S,M as c,Qb as g,Rb as y,Sb as v,Vc as w,Zb as E,a as o,b as h,ba as U,e as R,ib as _,la as s,n as l,pa as m,sc as C,tb as f,uc as D}from"./chunk-LUSYJMV7.js";function Y(i,r){if(i&1&&v(0,"ks-basic-grid",1),i&2){let d=b();p("config",d.gridConfig)("refresh$",d.refresh$)}}var W,me,J=R(()=>{w();H();O();U();G();j();X();q();z();V();K();w();W=i=>({date:i,format:"MMMM yyyy"});me=(()=>{let r=class r{constructor(){this._destroyRef=s(x),this._dialog=s(k),this._navService=s(F),this._sharedService=s(I),this._configService=s(B),this._sessionService=s(N),this._expensesService=s($),this.date=this._expensesService.date,this.refresh$=new l,this._isAdmin=this._sessionService.checkAccess(a.ADMIN),this._canAdd=this._sessionService.checkAccess(a.ADD_EXPENSE),this._canEdit=this._sessionService.checkAccess(a.EDIT_EXPENSE),this._canDelete=this._sessionService.checkAccess(a.DELETE_EXPENSE)}ngOnInit(){this._navService.updateNav({show:!0,back:!1,title:T.LAYOUT.children.EXPENSES.name,buttons:[{label:{text:"Change Month"},prefixIcon:{icon:"icon_calendar"},onClick:()=>this._openSearchByDate()},{label:{text:"Add Expense"},prefixIcon:{icon:"icon_plus_circle"},hide:!this._canAdd,onClick:()=>this._openExpensePopup()}]}),this._expensesService.date.set(new Date),this._initializeGrid(),this._expensesService.getExpenses()}ngAfterViewInit(){this._expensesService.filteredExpenses$.pipe(A(this._destroyRef)).subscribe(e=>{this.refresh$.next({data:e})})}changeDate(e){this._expensesService.changeDate(e)}_openSearchByDate(){this._sharedService.openSearchByDate().pipe(c(1)).subscribe(e=>e&&this._expensesService.changeDate(e))}_initializeGrid(){this.gridConfig={data:f([]),defaultPagination:100,maxTableHeight:this._configService.appConfig.maxTableHeightWithSearch,noDataMessage:{text:"No Expenses Found"},features:{showSearch:!0},columns:[{field:"name",title:"Expense",type:"string",extraStyles:{"min-width":"170px","max-width":"170px",width:"170px"}},{field:"amount",title:"Amount",type:"number",extraStyles:{"min-width":"100px","max-width":"100px",width:"100px"}},{field:"notes",title:"Notes",type:"string",extraStyles:{"max-width":"300px","min-width":"150px"}},{field:"date",title:"Date",type:"date",dateFormat:"dd/MM/yyyy",extraStyles:{"min-width":"110px","max-width":"110px",width:"110px"}},{field:"createdBy",title:"Created By",type:"string",extraStyles:{"min-width":"120px","max-width":"120px",width:"120px"},hide:!this._isAdmin},{field:"createdAt",title:"Created At",type:"date",dateFormat:"dd/MM/yyyy - HH:mm:ss a",extraStyles:{"min-width":"170px","max-width":"170px",width:"170px"},hide:!this._isAdmin}],actionsColumn:h(o({},this._configService.getActionColumn(2)),{enabled:this._canEdit||this._canDelete,buttons:[{prefixIcon:{icon:"icon_edit"},label:{text:"Edit"},onClickFn:e=>this._openExpensePopup(e),matType:"mat-icon-button",isVisibleFn:()=>this._canEdit},{prefixIcon:{icon:"icon_delete"},color:"warn",label:{text:"Delete"},onClickFn:e=>this._deleteExpense(e),matType:"mat-icon-button",isVisibleFn:()=>this._canDelete}]})}}_openExpensePopup(e){let n={hideClearButton:!0,title:{text:e?"Edit Expense":"Add Expense"},form:{value:e||{date:this._sharedService.getUtcDate()},fields:[{name:"name",maxLength:30,required:!0,flexibleValue:!0,type:"autocomplete",label:{text:"Expense"},stream:this._expensesService.expensesLov$,transformer:{nameKey:"name",valueKey:"value"}},{name:"amount",type:"number",label:{text:"Amount in $"},required:!0,range:{max:1e5}},{name:"date",type:"date",label:{text:"Date"},required:!0},{name:"notes",type:"text",label:{text:"Notes"},maxLength:100}]},beforeCloseObservable:t=>(t.date=this._sharedService.getUtcDate(t.date),e?this._expensesService.updateExpense(o(o({},e),t)):this._expensesService.addExpense(t)),getAfterSuccessResponse:t=>{t.data&&this._expensesService._updateStream(t.data,e?"edit":"add")}};this._dialog.openFormPopup(n,"500px")}_deleteExpense(e){this._dialog.openConfirmPopup({title:{text:"Confirm Delete"},message:{text:"Are you sure you want to delete this expense?"}}).afterClosed().pipe(c(1)).subscribe(n=>{n&&e?._id&&this._expensesService.deleteExpense(e)})}};r.\u0275fac=function(n){return new(n||r)},r.\u0275cmp=m({type:r,selectors:[["ks-solutions-expenses"]],standalone:!0,features:[C],decls:2,vars:4,consts:[[3,"btnClicked","config"],[3,"config","refresh$"]],template:function(n,t){n&1&&(g(0,"ks-base-changer",0),E("btnClicked",function(L){return t.changeDate(L)}),y(),u(1,Y,1,2,"ks-basic-grid",1)),n&2&&(p("config",D(2,W,t.date)),_(),S(t.gridConfig?1:-1))},dependencies:[M,P],changeDetection:0});let i=r;return i})()});J();export{me as ExpensesComponent};
